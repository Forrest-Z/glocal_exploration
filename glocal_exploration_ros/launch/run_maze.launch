<launch>
  <!-- General arguments -->
  <arg name="debug_mode"
       default="false"
       doc="Run the mapper in debug mode." />
  <arg name="show_rviz"
       default="true"
       doc="Automatically launch Rviz." />

  <!-- Planner arguments -->
  <arg name="planner_config" default="glocal_planner.yaml"/>
  
  <!-- Airsim arguments -->
  <arg name="airsim_config" default="maze_airsim.yaml"/>
  <arg name="use_airsim_time" default="true"/>
  <arg name="mav_name" default="airsim_drone"/>
  
  
  <!-- Automatically generated arguments -->
  <arg unless="$(arg debug_mode)" name="launch_prefix" value="" />
  <arg if="$(arg debug_mode)" name="launch_prefix" value="gdb -ex run --args" />




  
  <!-- Setup the experiment -->
  <param name="/use_sim_time" value="true" if="$(arg use_airsim_time)"/>
  <node name="experiment_manager" pkg="glocal_exploration_ros" type="experiment_manager.py" output="screen"/>
  
  <!-- tf -->
  <node pkg="tf" type="static_transform_publisher" name="static_tf_odom_world" args="0 0 0 0 0 0 1 /odom /world 100"/>
  <node pkg="tf" type="static_transform_publisher" name="static_tf_mission_world" args="0 0 0 0 0 0 1 /world /mission 100"/>
  
  <!-- airsim client -->
  <node name="airsim_simulator" pkg="unreal_airsim" type="airsim_simulator_node" required="true" output="screen" args="-alsologtostderr">
     <rosparam file="$(find glocal_exploration_ros)/config/$(arg airsim_config)"/>
  </node>

  <group ns="glocal">
    <!-- Planner -->
    <node name="glocal_system" pkg="glocal_exploration_ros" type="glocal_system_node"
          output="screen" launch-prefix="$(arg launch_prefix)">
      <rosparam command="load" file="$(find glocal_exploration_ros)/config/$(arg planner_config)"/>
      <remap from="~pointcloud" to="/$(arg mav_name)/Lidar" />
      <remap from="odometry" to="/$(arg mav_name)/ground_truth/odometry" />
      <remap from="command/pose" to="/$(arg mav_name)/command/pose" />
      <remap from="~/submap_in" to="~/mapping/submap_esdfs" />
      <remap from="~/submap_pose_in" to="~/mapping/submap_poses" />
    </node>  
    
    <!-- Skeleton Planner -->
    <node name="cblox_skeleton_server" pkg="cblox_planning_global"
          type="cblox_skeleton_server" output="screen"
          args="-alsologtostderr" clear_params="true" required="false" if="false">
      <remap from="submap_in" to="glocal_system/mapping/submap_esdfs" />
      <remap from="submap_pose_in" to="glocal_system/mapping/submap_poses" />
      
	    <param name="verbose" value="false" />
<!--      <param name="active_submap_service_topic" value="/planner/planner_node/publish_active_submap1"/>    -->
<!--the name must be wrong if Voxgraph map is in the same node of the planner, otherwise deadlock!-->

      <param name="visualize" value="true"/>
      <param name="robot_radius" value="0.5"/>
      <param name="do_smoothing" value="false"/>
      <param name="path_shortening" value="true"/>
      <param name="min_value" value="false"/>

      <param name="num_seconds_to_plan" value="3"/>
      <param name="grow_time" value="3"/>
      <param name="edge_density" value="1.5"/>

      <param name="frame_id" value="mission"/> 
      <param name="world_frame" value="mission"/> 
      <param name="mission_frame" value="mission"/> 
      <param name="odom_frame" value="world"/> 

      <param name="tsdf_voxel_size" value="0.2" />
      <param name="tsdf_voxels_per_side" value="16" />
      <param name="esdf_voxel_size" value="0.2" />
      <param name="esdf_voxels_per_side" value="16" />
      <param name="truncation_distance" value="0.6"/>
    </node>  

	<!-- Global trajectory smoother -->
<!--    <node name="mav_local_planner" pkg="mav_local_planner" type="mav_local_planner_node" args="-alsologtostderr" output="screen" clear_params="true">-->
<!--      <remap from="odometry" to="/$(arg mav_name)/simulated_odometry" />-->
<!--	  <remap from="command/trajectory" to="/$(arg mav_name)/command/trajectory" />-->
<!--	  <param name="smoother_name" value="polynomial" />-->
<!--      <param name="tsdf_voxel_size" value="$(arg voxel_size)" />-->
<!--      <param name="tsdf_voxels_per_side" value="16" />-->
<!--      <param name="esdf_max_distance_m" value="$(arg truncation_distance)" />-->
<!--      <param name="update_mesh_every_n_sec" value="5.0" />-->
<!--      <param name="publish_traversable" value="true" />-->
<!--      <param name="slice_level" value="1.0" />-->
<!--      <param name="publish_slices" value="true" />-->
<!--      <param name="autostart" value="false" />-->

      <!--param name="local_frame_id" value="$(arg frame_id)" /-->
<!--      <param name="local_frame_id" value="$(arg frame_id)" />-->
<!--      <param name="world_frame" value="$(arg frame_id)" />-->
<!--      <param name="replan_dt" value="10000" />-->
<!--      <param name="command_publishing_dt" value="10000" />-->
<!--      <param name="replan_lookahead_sec" value="1.0" />-->
<!--      <param name="mpc_prediction_horizon" value="300" />-->

<!--      <param name="robot_radius" value="$(arg robot_radius)" />-->
<!--      <param name="planning_horizon_m" value="20.0" />-->
<!--      <param name="verbose" value="true" />-->
<!--      <param name="v_max" value="2" />-->
<!--      <param name="a_max" value="1.5" />-->
<!--      <param name="avoid_collisions" value="false" />-->

      <!-- What to do in case of failure. -->
<!--      <param name="goal_selector_strategy" value="none" />-->
<!--    </node>-->
  </group>

  <!-- Visualization -->
  <group if="$(arg show_rviz)">
    <arg name="rviz_file" default="$(find glocal_exploration_ros)/config/maze_visualization.rviz" />
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(arg rviz_file)"/>
  </group>
</launch>
